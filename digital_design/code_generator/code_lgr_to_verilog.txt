assign s2[0][1] = s1[0][1];
assign s2[1][1] = s1[1][1];
assign s2[1][2] = s1[1][2];
assign s2[2][1] = s1[2][1];
assign s2[2][2] = s1[2][2];
assign s2[3][1] = s1[3][1];
assign s2[3][2] = s1[3][2];
assign s2[3][3] = s1[3][3];
assign s2[4][1] = s1[4][1];
assign s2[4][2] = s1[4][2];
assign s2[4][3] = s1[4][3];
assign s2[5][1] = s1[5][1];
assign s2[6][1] = s1[6][1];
assign s2[7][1] = s1[7][1];
assign s2[7][2] = s1[7][2];
assign s2[8][1] = s1[8][1];
assign s2[8][2] = s1[8][2];
assign s2[11][1] = s1[11][1];
assign s2[12][1] = s1[12][1];
assign s2[13][1] = s1[13][1];
assign s2[13][2] = s1[13][2];
assign s2[16][1] = s1[16][1];
assign s2[16][2] = s1[16][2];
assign s2[17][1] = s1[17][1];
assign s2[17][2] = s1[17][2];
assign s2[18][1] = s1[18][1];
assign s2[18][2] = s1[18][2];
assign s2[22][1] = s1[22][1];
assign s2[22][2] = s1[22][2];
assign s2[23][1] = s1[23][1];
assign s2[23][2] = s1[23][2];
assign s2[23][3] = s1[23][3];
assign s2[23][4] = s1[23][4];
assign s2[23][5] = s1[23][5];
assign s2[24][1] = s1[24][1];
assign s2[25][1] = s1[25][1];
assign s2[28][1] = s1[28][1];
assign s2[28][2] = s1[28][2];
assign s2[29][1] = s1[29][1];
assign s2[29][2] = s1[29][2];
assign s2[30][1] = s1[30][1];
assign s2[31][1] = s1[31][1];
comp32 comp32_u_s1_0(
	.a_i(s1[5][4:2]),
	.o({s2[5][2],s2[6][2]})
);
comp32 comp32_u_s1_1(
	.a_i(s1[6][4:2]),
	.o({s2[6][3],s2[7][3]})
);
comp32 comp32_u_s1_2(
	.a_i(s1[7][5:3]),
	.o({s2[7][4],s2[8][3]})
);
comp32 comp32_u_s1_3(
	.a_i(s1[8][5:3]),
	.o({s2[8][4],s2[9][1]})
);
comp32 comp32_u_s1_4(
	.a_i(s1[10][3:1]),
	.o({s2[10][1],s2[11][2]})
);
comp32 comp32_u_s1_5(
	.a_i(s1[10][6:4]),
	.o({s2[10][2],s2[11][3]})
);
comp32 comp32_u_s1_6(
	.a_i(s1[12][4:2]),
	.o({s2[12][2],s2[13][3]})
);
comp32 comp32_u_s1_7(
	.a_i(s1[12][7:5]),
	.o({s2[12][3],s2[13][4]})
);
comp32 comp32_u_s1_8(
	.a_i(s1[18][5:3]),
	.o({s2[18][3],s2[19][1]})
);
comp32 comp32_u_s1_9(
	.a_i(s1[21][3:1]),
	.o({s2[21][1],s2[22][3]})
);
comp32 comp32_u_s1_10(
	.a_i(s1[21][6:4]),
	.o({s2[21][2],s2[22][4]})
);
comp32 comp32_u_s1_11(
	.a_i(s1[22][5:3]),
	.o({s2[22][5],s2[23][6]})
);
comp32 comp32_u_s1_12(
	.a_i(s1[24][4:2]),
	.o({s2[24][2],s2[25][2]})
);
comp32 comp32_u_s1_13(
	.a_i(s1[25][4:2]),
	.o({s2[25][3],s2[26][1]})
);
comp32 comp32_u_s1_14(
	.a_i(s1[26][3:1]),
	.o({s2[26][2],s2[27][1]})
);
comp32 comp32_u_s1_15(
	.a_i(s1[27][3:1]),
	.o({s2[27][2],s2[28][3]})
);
comp63 comp63_u_s1_0(
	.a_i(s1[9][6:1]),
	.o({s2[9][2],s2[10][3],s2[11][4]})
);
comp63 comp63_u_s1_1(
	.a_i(s1[11][7:2]),
	.o({s2[11][5],s2[12][4],s2[13][5]})
);
comp63 comp63_u_s1_2(
	.a_i(s1[13][8:3]),
	.o({s2[13][6],s2[14][1],s2[15][1]})
);
comp63 comp63_u_s1_3(
	.a_i(s1[14][6:1]),
	.o({s2[14][2],s2[15][2],s2[16][3]})
);
comp63 comp63_u_s1_4(
	.a_i(s1[15][6:1]),
	.o({s2[15][3],s2[16][4],s2[17][3]})
);
comp63 comp63_u_s1_5(
	.a_i(s1[16][8:3]),
	.o({s2[16][5],s2[17][4],s2[18][4]})
);
comp63 comp63_u_s1_6(
	.a_i(s1[17][8:3]),
	.o({s2[17][5],s2[18][5],s2[19][2]})
);
comp63 comp63_u_s1_7(
	.a_i(s1[19][6:1]),
	.o({s2[19][3],s2[20][1],s2[21][3]})
);
comp63 comp63_u_s1_8(
	.a_i(s1[20][6:1]),
	.o({s2[20][2],s2[21][4],s2[22][6]})
);
comp233 comp233_u_s1_0(
	.a0_i(s1[14][9:7]),
	.a1_i({s1[15][8:7]}),
	.o({s2[14][3],s2[15][4],s2[16][6]})
);
comp233 comp233_u_s1_1(
	.a0_i(s1[18][8:6]),
	.a1_i({s1[19][8:7]}),
	.o({s2[18][6],s2[19][4],s2[20][3]})
);
assign s3[0][1] = s2[0][1];
assign s3[1][1] = s2[1][1];
assign s3[1][2] = s2[1][2];
assign s3[2][1] = s2[2][1];
assign s3[2][2] = s2[2][2];
assign s3[3][1] = s2[3][1];
assign s3[3][2] = s2[3][2];
assign s3[3][3] = s2[3][3];
assign s3[4][1] = s2[4][1];
assign s3[4][2] = s2[4][2];
assign s3[4][3] = s2[4][3];
assign s3[5][1] = s2[5][1];
assign s3[5][2] = s2[5][2];
assign s3[6][1] = s2[6][1];
assign s3[6][2] = s2[6][2];
assign s3[6][3] = s2[6][3];
assign s3[7][1] = s2[7][1];
assign s3[8][1] = s2[8][1];
assign s3[9][1] = s2[9][1];
assign s3[9][2] = s2[9][2];
assign s3[10][1] = s2[10][1];
assign s3[10][2] = s2[10][2];
assign s3[10][3] = s2[10][3];
assign s3[11][1] = s2[11][1];
assign s3[11][2] = s2[11][2];
assign s3[12][1] = s2[12][1];
assign s3[15][1] = s2[15][1];
assign s3[19][1] = s2[19][1];
assign s3[21][1] = s2[21][1];
assign s3[24][1] = s2[24][1];
assign s3[24][2] = s2[24][2];
assign s3[26][1] = s2[26][1];
assign s3[26][2] = s2[26][2];
assign s3[27][1] = s2[27][1];
assign s3[27][2] = s2[27][2];
assign s3[28][1] = s2[28][1];
assign s3[28][2] = s2[28][2];
assign s3[28][3] = s2[28][3];
assign s3[29][1] = s2[29][1];
assign s3[29][2] = s2[29][2];
assign s3[30][1] = s2[30][1];
assign s3[31][1] = s2[31][1];
comp32 comp32_u_s2_0(
	.a_i(s2[7][4:2]),
	.o({s3[7][2],s3[8][2]})
);
comp32 comp32_u_s2_1(
	.a_i(s2[8][4:2]),
	.o({s3[8][3],s3[9][3]})
);
comp32 comp32_u_s2_2(
	.a_i(s2[11][5:3]),
	.o({s3[11][3],s3[12][2]})
);
comp32 comp32_u_s2_3(
	.a_i(s2[12][4:2]),
	.o({s3[12][3],s3[13][1]})
);
comp32 comp32_u_s2_4(
	.a_i(s2[13][3:1]),
	.o({s3[13][2],s3[14][1]})
);
comp32 comp32_u_s2_5(
	.a_i(s2[13][6:4]),
	.o({s3[13][3],s3[14][2]})
);
comp32 comp32_u_s2_6(
	.a_i(s2[14][3:1]),
	.o({s3[14][3],s3[15][2]})
);
comp32 comp32_u_s2_7(
	.a_i(s2[15][4:2]),
	.o({s3[15][3],s3[16][1]})
);
comp32 comp32_u_s2_8(
	.a_i(s2[16][3:1]),
	.o({s3[16][2],s3[17][1]})
);
comp32 comp32_u_s2_9(
	.a_i(s2[17][3:1]),
	.o({s3[17][2],s3[18][1]})
);
comp32 comp32_u_s2_10(
	.a_i(s2[19][4:2]),
	.o({s3[19][2],s3[20][1]})
);
comp32 comp32_u_s2_11(
	.a_i(s2[20][3:1]),
	.o({s3[20][2],s3[21][2]})
);
comp32 comp32_u_s2_12(
	.a_i(s2[21][4:2]),
	.o({s3[21][3],s3[22][1]})
);
comp32 comp32_u_s2_13(
	.a_i(s2[22][3:1]),
	.o({s3[22][2],s3[23][1]})
);
comp32 comp32_u_s2_14(
	.a_i(s2[22][6:4]),
	.o({s3[22][3],s3[23][2]})
);
comp32 comp32_u_s2_15(
	.a_i(s2[25][3:1]),
	.o({s3[25][1],s3[26][3]})
);
comp63 comp63_u_s2_0(
	.a_i(s2[18][6:1]),
	.o({s3[18][2],s3[19][3],s3[20][3]})
);
comp63 comp63_u_s2_1(
	.a_i(s2[23][6:1]),
	.o({s3[23][3],s3[24][3],s3[25][2]})
);
comp233 comp233_u_s2_0(
	.a0_i(s2[16][6:4]),
	.a1_i({s2[17][5:4]}),
	.o({s3[16][3],s3[17][3],s3[18][3]})
);
assign s4[0][1] = s3[0][1];
assign s4[0][2] = 0;
assign s4[0][3] = 0;
assign s4[1][1] = s3[1][1];
assign s4[1][2] = s3[1][2];
assign s4[1][3] = 0;
assign s4[2][1] = s3[2][1];
assign s4[2][2] = s3[2][2];
assign s4[2][3] = 0;
assign s4[3][1] = s3[3][1];
assign s4[3][2] = s3[3][2];
assign s4[3][3] = s3[3][3];
assign s4[4][1] = s3[4][1];
assign s4[4][2] = s3[4][2];
assign s4[4][3] = s3[4][3];
assign s4[5][1] = s3[5][1];
assign s4[5][2] = s3[5][2];
assign s4[5][3] = 0;
assign s4[6][1] = s3[6][1];
assign s4[6][2] = s3[6][2];
assign s4[6][3] = s3[6][3];
assign s4[7][1] = s3[7][1];
assign s4[7][2] = s3[7][2];
assign s4[7][3] = 0;
assign s4[8][1] = s3[8][1];
assign s4[8][2] = s3[8][2];
assign s4[8][3] = s3[8][3];
assign s4[9][1] = s3[9][1];
assign s4[9][2] = s3[9][2];
assign s4[9][3] = s3[9][3];
assign s4[10][1] = s3[10][1];
assign s4[10][2] = s3[10][2];
assign s4[10][3] = s3[10][3];
assign s4[11][1] = s3[11][1];
assign s4[11][2] = s3[11][2];
assign s4[11][3] = s3[11][3];
assign s4[12][1] = s3[12][1];
assign s4[12][2] = s3[12][2];
assign s4[12][3] = s3[12][3];
assign s4[13][1] = s3[13][1];
assign s4[13][2] = s3[13][2];
assign s4[13][3] = s3[13][3];
assign s4[14][1] = s3[14][1];
assign s4[14][2] = s3[14][2];
assign s4[14][3] = s3[14][3];
assign s4[15][1] = s3[15][1];
assign s4[15][2] = s3[15][2];
assign s4[15][3] = s3[15][3];
assign s4[16][1] = s3[16][1];
assign s4[16][2] = s3[16][2];
assign s4[16][3] = s3[16][3];
assign s4[17][1] = s3[17][1];
assign s4[17][2] = s3[17][2];
assign s4[17][3] = s3[17][3];
assign s4[18][1] = s3[18][1];
assign s4[18][2] = s3[18][2];
assign s4[18][3] = s3[18][3];
assign s4[19][1] = s3[19][1];
assign s4[19][2] = s3[19][2];
assign s4[19][3] = s3[19][3];
assign s4[20][1] = s3[20][1];
assign s4[20][2] = s3[20][2];
assign s4[20][3] = s3[20][3];
assign s4[21][1] = s3[21][1];
assign s4[21][2] = s3[21][2];
assign s4[21][3] = s3[21][3];
assign s4[22][1] = s3[22][1];
assign s4[22][2] = s3[22][2];
assign s4[22][3] = s3[22][3];
assign s4[23][1] = s3[23][1];
assign s4[23][2] = s3[23][2];
assign s4[23][3] = s3[23][3];
assign s4[24][1] = s3[24][1];
assign s4[24][2] = s3[24][2];
assign s4[24][3] = s3[24][3];
assign s4[25][1] = s3[25][1];
assign s4[25][2] = s3[25][2];
assign s4[25][3] = 0;
assign s4[26][1] = s3[26][1];
assign s4[26][2] = s3[26][2];
assign s4[26][3] = s3[26][3];
assign s4[27][1] = s3[27][1];
assign s4[27][2] = s3[27][2];
assign s4[27][3] = 0;
assign s4[28][1] = s3[28][1];
assign s4[28][2] = s3[28][2];
assign s4[28][3] = s3[28][3];
assign s4[29][1] = s3[29][1];
assign s4[29][2] = s3[29][2];
assign s4[29][3] = 0;
assign s4[30][1] = s3[30][1];
assign s4[30][2] = 0;
assign s4[30][3] = 0;
assign s4[31][1] = s3[31][1];
assign s4[31][2] = 0;
assign s4[31][3] = 0;